name: Validation

on:
  - push
  - pull_request

jobs:
  test:
    name: Test-Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python environment
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install Local Package
        run: |
          pip install -e .

      - name: set up the wiki environment
        run: |
          git clone https://github.com/x4dr/Fen.git ~/wiki
      - name: Run unittests/coverage
        run: |
          pip install coverage
          coverage run --source . --omit "*venv/*" -m unittest discover --verbose tests && \
          coverage report -m -i --fail-under=80 --skip-covered --skip-empty | tee report.txt
          test $? -eq 0
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage_report
          path: report.txt
      - name: Coveralls Parallel
        uses: coverallsapp/github-action@v2
        with:
          flag-name: run-linux-py311
          parallel: true
      - name: Require 80% Coverage
        run: ! grep -q "Coverage failure:" report.txt
  finish:
    needs: test
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@v2
        with:
          parallel-finished: true

  lint:
    name: Pre-Commit Hooks that should have been run by committer
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: set PY
      run: echo "PY=$(python --version --version | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
    - uses: actions/cache@v3
      with:
        path: ~/.cache/pre-commit
        key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
    - uses: pre-commit/action@v3.0.0

  validation_check:
    needs:
      - test
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: output validation success
        run: echo "success=true" >> $GITHUB_OUTPUT
